<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
						">  
    <!-- 自动扫描 -->  
    <context:component-scan base-package="com.kaifa" />  
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">
			<list>
				<value>classpath:public.properties</value>
				<value>classpath*:META-INF/conf/properties/*.properties</value>
			</list>
		</property>
    </bean>  
  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${jdbc.driver}" />  
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="${jdbc.initialSize}"></property>  
        <!-- 连接池最大数量 -->  
        <property name="maxActive" value="${jdbc.maxActive}"></property>  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdle" value="${jdbc.maxIdle}"></property>  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${jdbc.minIdle}"></property>  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${jdbc.maxWait}"></property>  
    </bean>  
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" >
	        	<value>classpath:com/kaifa/mapping/*.xml</value>
        </property>  
    </bean>  
    <bean id="authority_sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" >
	        	<value>classpath:com/kaifa/authority/mapping/*.xml</value>
        </property>  
    </bean>  
    
  <!--     <bean id="video_sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        自动扫描mapping.xml文件  
        <property name="mapperLocations" >
	        	<value>classpath*:com/kaifa/lovely/**/mapping/*.xml</value>
        </property>  
    </bean>  -->
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.kaifa.mapper" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  	<property name="basePackage" value="com.kaifa.authority.mapper" />
	  	<property name="sqlSessionFactoryBeanName" value="authority_sqlSessionFactory"></property>  
	</bean>
		<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  	<property name="basePackage" value="com.kaifa.lovely.*.mapper" />
	  	<property name="sqlSessionFactoryBeanName" value="video_sqlSessionFactory"></property>  
	</bean> -->
	
	
	
	<bean id="authority_sqlSessionTemplate"  class="org.mybatis.spring.SqlSessionTemplate">   
          <constructor-arg index="0" ref="authority_sqlSessionFactory" />   
     </bean>  
	
	<!-- <bean id="jdbcDaoSupport" class="org.springframework.jdbc.core.support.JdbcDaoSupport">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
		<property name="fetchSize" value="${jdbc.fetchSize}"/>
	</bean> -->


  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    
    <tx:advice id="schoolplatform_txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" isolation="DEFAULT" propagation="REQUIRED"
				read-only="true" />
			<tx:method name="load*" isolation="DEFAULT" propagation="REQUIRED"
				read-only="true" />
			<tx:method name="loadUserByUsername" isolation="DEFAULT" read-only="false"
				propagation="REQUIRED"/>
			<tx:method name="list*" isolation="DEFAULT" propagation="REQUIRED"
				read-only="true" />
			<tx:method name="find*" isolation="DEFAULT" propagation="REQUIRED"
				read-only="true" />
			<tx:method name="select*" isolation="DEFAULT" propagation="REQUIRED"
				read-only="true" />
			<tx:method name="query*" isolation="DEFAULT" propagation="REQUIRED"
				read-only="true" />
			<tx:method name="criteria*" isolation="DEFAULT"
				propagation="REQUIRED" read-only="true" />

			<tx:method name="onSuccessfulAuthentication" read-only="false"/>
			<tx:method name="onUnsuccessfulAuthentication" read-only="false"/>

			<tx:method name="auditLog*" isolation="DEFAULT" read-only="false"
				propagation="REQUIRES_NEW"/>

			<tx:method name="synchro*" isolation="DEFAULT" read-only="false"
				propagation="REQUIRED"/>
			<tx:method name="init*" isolation="DEFAULT" read-only="false"
				propagation="REQUIRED"/>
			<tx:method name="insert*" isolation="DEFAULT" read-only="false"
				propagation="REQUIRED"/>
			<tx:method name="update*" isolation="DEFAULT" read-only="false"
				propagation="REQUIRED"/>
			<tx:method name="save*" isolation="DEFAULT" read-only="false"
				propagation="REQUIRED"/>
			<tx:method name="add*" isolation="DEFAULT" read-only="false"
				propagation="REQUIRED"/>
			<tx:method name="create*" isolation="DEFAULT" read-only="false"
				propagation="REQUIRED"/>
			<tx:method name="del*" isolation="DEFAULT" read-only="false"
				propagation="REQUIRED"/>
			<tx:method name="undel*" isolation="DEFAULT" read-only="false"
				propagation="REQUIRED"/>
			<tx:method name="remove*" isolation="DEFAULT" read-only="false"
				propagation="REQUIRED"/>
			<tx:method name="batch*" isolation="DEFAULT"
				read-only="false" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="schoolplatform_serviceOperation"
			expression="execution(* com.kaifa..*Service.*(..))" />
		<aop:advisor pointcut-ref="schoolplatform_serviceOperation" advice-ref="schoolplatform_txAdvice" />
	</aop:config>
  
</beans>  